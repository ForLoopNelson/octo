const i={startState:function(){return{inString:!1,stringType:"",lhs:!0,inArray:0}},token:function(n,r){if(r.inString||n.peek()!='"'&&n.peek()!="'"||(r.stringType=n.peek(),n.next(),r.inString=!0),n.sol()&&r.inArray===0&&(r.lhs=!0),r.inString){for(;r.inString&&!n.eol();)n.peek()===r.stringType?(n.next(),r.inString=!1):n.peek()==="\\"?(n.next(),n.next()):n.match(/^.[^\\\"\']*/);return r.lhs?"property":"string"}return r.inArray&&n.peek()==="]"?(n.next(),r.inArray--,"bracket"):r.lhs&&n.peek()==="["&&n.skipTo("]")?(n.next(),n.peek()==="]"&&n.next(),"atom"):n.peek()==="#"?(n.skipToEnd(),"comment"):n.eatSpace()?null:r.lhs&&n.eatWhile(function(t){return t!="="&&t!=" "})?"property":r.lhs&&n.peek()==="="?(n.next(),r.lhs=!1,null):!r.lhs&&n.match(/^\d\d\d\d[\d\-\:\.T]*Z/)?"atom":r.lhs||!n.match("true")&&!n.match("false")?r.lhs||n.peek()!=="["?!r.lhs&&n.match(/^\-?\d+(?:\.\d+)?/)?"number":(n.eatSpace()||n.next(),null):(r.inArray++,n.next(),"bracket"):"atom"}};export{i as toml};
